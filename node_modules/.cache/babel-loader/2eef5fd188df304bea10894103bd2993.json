{"remainingRequest":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/babel-loader/lib/index.js!/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/src/components/Slider.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/src/components/Slider.vue","mtime":1591191507000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL3Rlc3Nrb28vRGVza3RvcC92dWUtYmxhY2stZGFzaGJvYXJkLXByby12MS4yLjMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yIjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCi8vCi8vCi8vCmltcG9ydCBub1VpU2xpZGVyIGZyb20gJ25vdWlzbGlkZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3NsaWRlcicsCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIEFycmF5LCBOdW1iZXJdLAogICAgICBkZXNjcmlwdGlvbjogJ3NsaWRlciB2YWx1ZScKICAgIH0sCiAgICBkaXNhYmxlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgICAgZGVzY3JpcHRpb246ICd3aGV0aGVyIHRoZSBzbGlkZXIgaXMgZGlzYWJsZWQnCiAgICB9LAogICAgc3RhcnQ6IHsKICAgICAgdHlwZTogW051bWJlciwgQXJyYXldLAogICAgICBkZWZhdWx0OiAwLAogICAgICBkZXNjcmlwdGlvbjogJ1tub1VpIFNsaWRlciBzdGFydF0oaHR0cHM6Ly9yZWZyZXNobGVzcy5jb20vbm91aXNsaWRlci9zbGlkZXItb3B0aW9ucy8jc2VjdGlvbi1zdGFydCknCiAgICB9LAogICAgY29ubmVjdDogewogICAgICB0eXBlOiBbQm9vbGVhbiwgQXJyYXldLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW3RydWUsIGZhbHNlXTsKICAgICAgfSwKICAgICAgZGVzY3JpcHRpb246ICdbbm9VaSBTbGlkZXIgY29ubmVjdF0oaHR0cHM6Ly9yZWZyZXNobGVzcy5jb20vbm91aXNsaWRlci9zbGlkZXItb3B0aW9ucy8jc2VjdGlvbi1jb25uZWN0KScKICAgIH0sCiAgICByYW5nZTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBtaW46IDAsCiAgICAgICAgICBtYXg6IDEwMAogICAgICAgIH07CiAgICAgIH0sCiAgICAgIGRlc2NyaXB0aW9uOiAnW25vVWkgU2xpZGVyIHJhbmdlXShodHRwczovL3JlZnJlc2hsZXNzLmNvbS9ub3Vpc2xpZGVyL3NsaWRlci12YWx1ZXMvI3NlY3Rpb24tcmFuZ2UpJwogICAgfSwKICAgIHR5cGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJywKICAgICAgZGVzY3JpcHRpb246ICdzbGlkZXIgdHlwZSAoY29sb3IpICcKICAgIH0sCiAgICBvcHRpb25zOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9LAogICAgICBkZXNjcmlwdGlvbjogJ1tub1VpIFNsaWRlciBvcHRpb25zXShodHRwczovL3JlZnJlc2hsZXNzLmNvbS9ub3Vpc2xpZGVyL3NsaWRlci1vcHRpb25zLyknCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2xpZGVyOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgY3JlYXRlU2xpZGVyOiBmdW5jdGlvbiBjcmVhdGVTbGlkZXIoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBub1VpU2xpZGVyLmNyZWF0ZSh0aGlzLiRlbCwgX29iamVjdFNwcmVhZCh7CiAgICAgICAgc3RhcnQ6IHRoaXMudmFsdWUgfHwgdGhpcy5zdGFydCwKICAgICAgICBjb25uZWN0OiB0aGlzLmNvbm5lY3QsCiAgICAgICAgcmFuZ2U6IHRoaXMucmFuZ2UKICAgICAgfSwgdGhpcy5vcHRpb25zKSk7CiAgICAgIHZhciBzbGlkZXIgPSB0aGlzLiRlbC5ub1VpU2xpZGVyOwogICAgICBzbGlkZXIub24oJ3NsaWRlJywgZnVuY3Rpb24gKCkgewogICAgICAgIHZhciB2YWx1ZSA9IHNsaWRlci5nZXQoKTsKCiAgICAgICAgaWYgKHZhbHVlICE9PSBfdGhpcy52YWx1ZSkgewogICAgICAgICAgX3RoaXMuJGVtaXQoJ2lucHV0JywgdmFsdWUpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5jcmVhdGVTbGlkZXIoKTsKICB9LAogIHdhdGNoOiB7CiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUobmV3VmFsdWUsIG9sZFZhbHVlKSB7CiAgICAgIHZhciBzbGlkZXIgPSB0aGlzLiRlbC5ub1VpU2xpZGVyOwogICAgICB2YXIgc2xpZGVyVmFsdWUgPSBzbGlkZXIuZ2V0KCk7CgogICAgICBpZiAobmV3VmFsdWUgIT09IG9sZFZhbHVlICYmIHNsaWRlclZhbHVlICE9PSBuZXdWYWx1ZSkgewogICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNsaWRlclZhbHVlKSAmJiBBcnJheS5pc0FycmF5KG5ld1ZhbHVlKSkgewogICAgICAgICAgaWYgKG9sZFZhbHVlLmxlbmd0aCA9PT0gbmV3VmFsdWUubGVuZ3RoICYmIG9sZFZhbHVlLmV2ZXJ5KGZ1bmN0aW9uICh2LCBpKSB7CiAgICAgICAgICAgIHJldHVybiB2ID09PSBuZXdWYWx1ZVtpXTsKICAgICAgICAgIH0pKSB7CiAgICAgICAgICAgIHNsaWRlci5zZXQobmV3VmFsdWUpOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzbGlkZXIuc2V0KG5ld1ZhbHVlKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["Slider.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"slider\" :class=\"[`slider-${type}`]\" :disabled=\"disabled\"></div>\n</template>\n<script>\nimport noUiSlider from 'nouislider';\n\nexport default {\n  name: 'slider',\n  props: {\n    value: {\n      type: [String, Array, Number],\n      description: 'slider value'\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      description: 'whether the slider is disabled'\n    },\n    start: {\n      type: [Number, Array],\n      default: 0,\n      description:\n        '[noUi Slider start](https://refreshless.com/nouislider/slider-options/#section-start)'\n    },\n    connect: {\n      type: [Boolean, Array],\n      default: () => [true, false],\n      description:\n        '[noUi Slider connect](https://refreshless.com/nouislider/slider-options/#section-connect)'\n    },\n    range: {\n      type: Object,\n      default: () => {\n        return {\n          min: 0,\n          max: 100\n        };\n      },\n      description:\n        '[noUi Slider range](https://refreshless.com/nouislider/slider-values/#section-range)'\n    },\n    type: {\n      type: String,\n      default: '',\n      description: 'slider type (color) '\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n      description:\n        '[noUi Slider options](https://refreshless.com/nouislider/slider-options/)'\n    }\n  },\n  data() {\n    return {\n      slider: null\n    };\n  },\n  methods: {\n    createSlider() {\n      noUiSlider.create(this.$el, {\n        start: this.value || this.start,\n        connect: this.connect,\n        range: this.range,\n        ...this.options\n      });\n      const slider = this.$el.noUiSlider;\n      slider.on('slide', () => {\n        let value = slider.get();\n        if (value !== this.value) {\n          this.$emit('input', value);\n        }\n      });\n    }\n  },\n  mounted() {\n    this.createSlider();\n  },\n  watch: {\n    value(newValue, oldValue) {\n      const slider = this.$el.noUiSlider;\n      const sliderValue = slider.get();\n      if (newValue !== oldValue && sliderValue !== newValue) {\n        if (Array.isArray(sliderValue) && Array.isArray(newValue)) {\n          if (\n            oldValue.length === newValue.length &&\n            oldValue.every((v, i) => v === newValue[i])\n          ) {\n            slider.set(newValue);\n          }\n        } else {\n          slider.set(newValue);\n        }\n      }\n    }\n  }\n};\n</script>\n<style></style>\n"],"sourceRoot":"src/components"}]}