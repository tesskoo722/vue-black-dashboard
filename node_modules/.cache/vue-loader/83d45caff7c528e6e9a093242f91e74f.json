{"remainingRequest":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/src/pages/Components/SweetAlert.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/src/pages/Components/SweetAlert.vue","mtime":1591191507000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLWRpYWxvZyB7CiAgd2lkdGg6IDUwJTsKfQoKLnN3YWwyLWljb24tY29udGVudHsKICBmb250LXNpemU6IGluaGVyaXQgIWltcG9ydGFudDsKfQoKQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7CiAgLmVsLWRpYWxvZyB7CiAgICB3aWR0aDogOTAlOwogIH0KfQo="},{"version":3,"sources":["SweetAlert.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqQA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"SweetAlert.vue","sourceRoot":"src/pages/Components","sourcesContent":["<template>\n  <div class=\"places-sweet-alerts\">\n    <h2 class=\"text-center\">Sweet Alert</h2>\n    <p class=\"category text-center\">\n      A beautiful plugin, that replace the classic alert, Handcrafted by our\n      friend\n      <a target=\"_blank\" href=\"https://twitter.com/t4t5\">Tristan Edwards</a>.\n      Please check out the\n      <a href=\"https://sweetalert2.github.io/\" target=\"_blank\"\n        >full documentation.</a\n      >\n    </p>\n    <div class=\"row mt-5\">\n      <div class=\"col-md-3 ml-auto\">\n        <card>\n          <div class=\"text-center\">\n            <p class=\"card-text\">Basic example</p>\n            <base-button type=\"primary\" @click.native=\"showSwal('basic')\"\n              >Try me!</base-button\n            >\n          </div>\n        </card>\n      </div>\n      <div class=\"col-md-3 ml-auto\">\n        <card>\n          <div class=\"text-center\">\n            <p class=\"card-text\">Custom HTML description</p>\n            <base-button type=\"primary\" @click.native=\"showSwal('custom-html')\"\n              >Try me!</base-button\n            >\n          </div>\n        </card>\n      </div>\n      <div class=\"col-md-3 ml-auto\">\n        <card>\n          <div class=\"text-center\">\n            <p class=\"card-text\">Modal window with input field</p>\n            <base-button type=\"primary\" @click.native=\"showSwal('input-field')\"\n              >Try me!</base-button\n            >\n          </div>\n        </card>\n      </div>\n\n      <div class=\"col-md-3 ml-auto\">\n        <card>\n          <div class=\"text-center\">\n            <p class=\"card-text\">\n              A message with auto close timer set to 2 seconds\n            </p>\n            <base-button type=\"primary\" @click.native=\"showSwal('auto-close')\"\n              >Try me!</base-button\n            >\n          </div>\n        </card>\n      </div>\n\n      <div class=\"col-md-3 mr-auto\">\n        <card>\n          <div class=\"text-center\">\n            <p class=\"card-text\">A success message</p>\n            <base-button\n              type=\"primary\"\n              @click.native=\"showSwal('success-message')\"\n              >Try me!</base-button\n            >\n          </div>\n        </card>\n      </div>\n\n      <div class=\"col-md-3 mr-auto\">\n        <card>\n          <div class=\"text-center\">\n            <p class=\"card-text\">A title with a text under</p>\n            <base-button\n              type=\"primary\"\n              @click.native=\"showSwal('title-and-text')\"\n              >Try me!</base-button\n            >\n          </div>\n        </card>\n      </div>\n\n      <div class=\"col-md-3 mr-auto\">\n        <card>\n          <div class=\"text-center\">\n            <p class=\"card-text\">\n              A warning message, with a function attached to the \"Confirm\"\n              Button...\n            </p>\n            <base-button\n              type=\"primary\"\n              @click.native=\"showSwal('warning-message-and-confirmation')\"\n              >Try me!\n            </base-button>\n          </div>\n        </card>\n      </div>\n\n      <div class=\"col-md-3 mr-auto\">\n        <card>\n          <div class=\"text-center\">\n            <p class=\"card-text\">\n              ...and by passing a parameter, you can execute something else for\n              \"Cancel\"\n            </p>\n            <base-button\n              type=\"primary\"\n              @click.native=\"showSwal('warning-message-and-cancel')\"\n              >Try me!</base-button\n            >\n          </div>\n        </card>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport swal from 'sweetalert2';\n\nexport default {\n  methods: {\n    showSwal(type) {\n      if (type === 'basic') {\n        swal.fire({\n          title: `Here's a message!`,\n          buttonsStyling: false,\n          customClass: {\n            confirmButton: 'btn btn-success btn-fill'\n          }\n        });\n      } else if (type === 'title-and-text') {\n        swal.fire({\n          title: `Here's a message!`,\n          text: `It's pretty, isn't it?`,\n          buttonsStyling: false,\n          customClass: {\n            confirmButton: 'btn btn-info btn-fill'\n          }\n        });\n      } else if (type === 'success-message') {\n        swal.fire({\n          title: `Good job!`,\n          text: 'You clicked the button!',\n          buttonsStyling: false,\n          customClass: {\n            confirmButton: 'btn btn-success btn-fill'\n          },\n          icon: 'success'\n        });\n      } else if (type === 'warning-message-and-confirmation') {\n        swal.fire({\n          title: 'Are you sure?',\n          text: `You won't be able to revert this!`,\n          icon: 'warning',\n          showCancelButton: true,\n          customClass: {\n            confirmButton: 'btn btn-success btn-fill',\n            cancelButton: 'btn btn-danger btn-fill'\n          },\n          confirmButtonText: 'Yes, delete it!',\n          buttonsStyling: false\n        }).then(() => {\n          swal.fire({\n            title: 'Deleted!',\n            text: 'Your file has been deleted.',\n            icon: 'success',\n            customClass: {\n              confirmButton: 'btn btn-success btn-fill'\n            },\n            buttonsStyling: false\n          });\n        });\n      } else if (type === 'warning-message-and-cancel') {\n        swal.fire({\n          title: 'Are you sure?',\n          text: 'You will not be able to recover this imaginary file!',\n          icon: 'warning',\n          showCancelButton: true,\n          confirmButtonText: 'Yes, delete it!',\n          cancelButtonText: 'No, keep it',\n          customClass: {\n            confirmButton: 'btn btn-success btn-fill',\n            cancelButton: 'btn btn-danger btn-fill'\n          },\n          buttonsStyling: false\n        }).then(\n          () => {\n            swal.fire({\n              title: 'Deleted!',\n              text: 'Your imaginary file has been deleted.',\n              icon: 'success',\n              customClass: {\n                confirmButton: 'btn btn-success btn-fill'\n              },\n              buttonsStyling: false\n            });\n          },\n          dismiss => {\n            // dismiss can be 'overlay', 'cancel', 'close', 'esc', 'timer'\n            if (dismiss === 'cancel') {\n              swal.fire({\n                title: 'Cancelled',\n                text: 'Your imaginary file is safe :)',\n                icon: 'error',\n                customClass: {\n                  confirmButton: 'btn btn-info btn-fill'\n                },\n                buttonsStyling: false\n              });\n            }\n          }\n        );\n      } else if (type === 'custom-html') {\n        swal.fire({\n          title: 'HTML example',\n          buttonsStyling: false,\n          customClass: {\n            confirmButton: 'btn btn-success btn-fill'\n          },\n          html: `You can use <b>bold text</b>,\n            <a href=\"http://github.com\">links</a>\n            and other HTML tags`\n        });\n      } else if (type === 'auto-close') {\n        swal.fire({\n          title: 'Auto close alert!',\n          text: 'I will close in 2 seconds.',\n          timer: 2000,\n          showConfirmButton: false\n        });\n      } else if (type === 'input-field') {\n        swal.fire({\n          title: 'Input something',\n          html: `<div class=\"form-group\">\n            <input id=\"input-field\" type=\"text\" class=\"form-control\" />\n            </div>`,\n          showCancelButton: true,\n          customClass: {\n            confirmButton: 'btn btn-success btn-fill',\n            cancelButton: 'btn btn-danger btn-fill'\n          },\n          buttonsStyling: false\n        })\n          .then(() => {\n            swal.fire({\n              icon: 'success',\n              html: 'You entered',\n              customClass: {\n                confirmButton: 'btn btn-success btn-fill'\n              },\n              buttonsStyling: false\n            });\n          })\n          .catch(swal.noop);\n      }\n    }\n  }\n};\n</script>\n<style>\n.el-dialog {\n  width: 50%;\n}\n\n.swal2-icon-content{\n  font-size: inherit !important;\n}\n\n@media (max-width: 800px) {\n  .el-dialog {\n    width: 90%;\n  }\n}\n</style>\n"]}]}