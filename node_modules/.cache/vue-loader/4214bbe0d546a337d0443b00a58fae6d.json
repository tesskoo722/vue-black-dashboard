{"remainingRequest":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/src/pages/Tables/ExtendedTables/ShoppingTable.vue?vue&type=style&index=0&id=3ca180eb&scoped=true&lang=css&","dependencies":[{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/src/pages/Tables/ExtendedTables/ShoppingTable.vue","mtime":1591191507000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tesskoo/Desktop/vue-black-dashboard-pro-v1.2.3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnN0YXRzLWNvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7CiAgcGFkZGluZy1yaWdodDogMjBweDsKfQoKLnN0YXRzLXRvdGFsIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQouc3RhdHMtdG90YWwtbnVtYmVycyB7CiAgbWluLXdpZHRoOiAyNDBweDsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKfQo="},{"version":3,"sources":["ShoppingTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ShoppingTable.vue","sourceRoot":"src/pages/Tables/ExtendedTables","sourcesContent":["<template>\n  <div class=\"table-shopping\">\n    <el-table style=\"width: 100%\" :data=\"productsTable\">\n      <el-table-column min-width=\"140\">\n        <div slot-scope=\"{ row }\" class=\"img-container\">\n          <img :src=\"row.image\" alt=\"product image\" />\n        </div>\n      </el-table-column>\n      <el-table-column min-width=\"270\" label=\"Product\">\n        <div class=\"td-name\" slot-scope=\"{ row }\">\n          <a href=\"#jacket\">{{ row.title }}</a> <br />\n          <small>{{ row.description }}</small>\n        </div>\n      </el-table-column>\n      <el-table-column\n        min-width=\"120\"\n        label=\"Color\"\n        prop=\"color\"\n      ></el-table-column>\n      <el-table-column\n        min-width=\"100\"\n        label=\"Size\"\n        prop=\"size\"\n      ></el-table-column>\n      <el-table-column min-width=\"100\" label=\"Price\" align=\"center\">\n        <template slot-scope=\"{ row }\">\n          <small>€</small> {{ row.price }}\n        </template>\n      </el-table-column>\n      <el-table-column min-width=\"160\" label=\"QTY\" align=\"center\">\n        <template slot-scope=\"{ row }\">\n          <div class=\"btn-group\">\n            <base-button\n              type=\"info\"\n              class=\"btn-simple\"\n              size=\"sm\"\n              @click=\"decreaseQuantity(row)\"\n            >\n              <i class=\"tim-icons icon-simple-delete\"></i>\n            </base-button>\n            <base-button type=\"info\" size=\"sm\" @click=\"increaseQuantity(row)\">\n              <i class=\"tim-icons icon-simple-add\"></i>\n            </base-button>\n          </div>\n          {{ row.quantity }}\n        </template>\n      </el-table-column>\n      <el-table-column min-width=\"100\" label=\"Amount\" align=\"right\">\n        <template slot-scope=\"{ row }\">\n          <small>€</small> {{ row.amount }}\n        </template>\n      </el-table-column>\n      <el-table-column min-width=\"60\" label=\"\" align=\"left\">\n        <template slot-scope=\"{ row }\">\n          <base-button type=\"primary\" class=\"btn-link\">\n            <i class=\"tim-icons icon-simple-remove\"></i>\n          </base-button>\n        </template>\n      </el-table-column>\n\n      <div slot=\"append\" class=\"stats-container\">\n        <div class=\"stats-total\">\n          <div class=\"stats-total-numbers\">\n            <div class=\"td-total\">Total</div>\n            <div class=\"td-price mr-2\">\n              <small>€</small> {{ shoppingTotal }}\n            </div>\n          </div>\n        </div>\n        <div class=\"d-flex justify-content-end\">\n          <base-button type=\"info\" round class=\"float-right\" title=\"\">\n            Complete Purchase <i class=\"tim-icons icon-minimal-right\"></i>\n          </base-button>\n        </div>\n      </div>\n    </el-table>\n  </div>\n</template>\n<script>\nimport { Table, TableColumn } from 'element-ui';\n\nexport default {\n  components: {\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn\n  },\n  data() {\n    return {\n      productsTable: [\n        {\n          image: 'img/jacket.png',\n          title: 'Suede Biker Jacket ',\n          description: 'by Saint Laurent',\n          color: 'Black',\n          size: 'M',\n          price: 3390,\n          quantity: 1,\n          amount: 3390\n        },\n        {\n          image: 'img/t-shirt.png',\n          title: 'Jersey T-Shirt',\n          description: 'by Balmain',\n          color: 'Black',\n          size: 'M',\n          price: 499,\n          quantity: 2,\n          amount: 998\n        },\n        {\n          image: 'img/gucci.png',\n          title: '\\tSlim-Fit Swim Short ',\n          description: 'by Prada',\n          color: 'Red',\n          size: 'M',\n          price: 200,\n          quantity: 1,\n          amount: 200\n        }\n      ]\n    };\n  },\n  computed: {\n    shoppingTotal() {\n      return this.productsTable.reduce((accumulator, current) => {\n        return accumulator + current.amount;\n      }, 0);\n    }\n  },\n  methods: {\n    increaseQuantity(row) {\n      row.quantity++;\n      this.computeAmount(row);\n    },\n    decreaseQuantity(row) {\n      if (row.quantity > 1) {\n        row.quantity--;\n        this.computeAmount(row);\n      }\n    },\n    computeAmount(row) {\n      row.amount = row.quantity * row.price;\n    }\n  }\n};\n</script>\n<style scoped>\n.stats-container {\n  display: flex;\n  flex-direction: column;\n  color: rgba(255, 255, 255, 0.7);\n  padding-right: 20px;\n}\n\n.stats-total {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 20px;\n}\n.stats-total-numbers {\n  min-width: 240px;\n  display: flex;\n  justify-content: space-between;\n}\n</style>\n"]}]}